buildscript {
    dependencies {
        classpath("io.github.takiviko.guide-generator:guide-generator:1.0.0")
    }
}

plugins {
    id 'java'
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '1.2.0'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'maven-publish'
    id 'signing'
    id 'io.github.takiviko.guide-generator' version '1.0.0'
}

group 'io.github.takiviko'
version '1.0.0'

tasks.withType(Copy).all {
    duplicatesStrategy 'exclude'
}

repositories {
    mavenCentral()
}

ext {
    lombokVersion = '1.18.24'
    reflectionsVersion = '0.10.2'
    flexMarkVersion = '0.64.0'
    jUnitVersion = '5.9.0'
}

dependencies {
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation "org.reflections:reflections:${reflectionsVersion}"
    implementation "com.vladsch.flexmark:flexmark-pdf-converter:${flexMarkVersion}"
    implementation 'io.github.takiviko.guide-generator:guide-generator:1.0.0'


    testImplementation "org.junit.jupiter:junit-jupiter-api:${jUnitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${jUnitVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation gradleApi()
}

test {
    useJUnitPlatform()
}

shadowJar {
    archiveBaseName.set('guide-generator-shadowed')
    archiveClassifier.set('')
    archiveVersion.set('')
}

/**
 * Plugin configuration for the plugin portal
 * https://plugins.gradle.org/
 */
gradlePlugin {
    website = 'https://github.com/takiviko/guide-generator/'
    vcsUrl = 'https://github.com/takiviko/guide-generator/'
    plugins {
        guide {
            id = "io.github.takiviko.guide-generator"
            implementationClass = "takiviko.guidegenerator.plugin.GuideGeneratorPlugin"
            displayName = "Guide generator plugin"
            description = "Generates user docs from package-level annotations"
            tags.set(['test', 'guide', 'documentation', 'pdf', 'markdown', 'util', 'generate'])
        }
    }
}

/**
 * Maven Central publishing configuration
 * https://central.sonatype.org/
 */
publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'io.github.takiviko'
            artifactId = 'guide-generator'
            from components.java

            pom {
                name = 'Guide generator'
                description = 'Java tool for keeping documentation right next to the codebase.'

                signing {
                    useGpgCmd()
                    sign publishing.publications.maven
                    sign shadowJar
                }


                license {
                    name = 'Apache 2.0'
                    url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }

                developers {
                    developer {
                        id = 'takiviko'
                        name = 'Viktor Takacs'
                    }
                }

                scm {
                    url = 'https://github.com/takiviko/guide-generator'
                }
            }
        }
    }
    repositories {
        maven {
            url = project.findProperty("ossrhUrl")
            credentials {
                username = project.findProperty("ossrhUsername")
                password = project.findProperty("ossrhPassword")
            }
        }
    }
}

guideGenerator {
    setBasePackage('takiviko.guidegenerator')
}